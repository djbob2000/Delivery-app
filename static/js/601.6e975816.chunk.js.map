{"version":3,"file":"static/js/601.6e975816.chunk.js","mappings":"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","sources":["constants/shopsData.js","components/OrderForm/OrderForm.jsx","components/CartItem/CartItem.jsx","components/CartList/CartList.jsx","components/TotalPrice/TotalPrice.jsx","components/OrderButton/OrderButton.jsx","components/Cart/Cart.jsx","pages/CartPage/CartPage.jsx","redux/selectors.js"],"sourcesContent":["export const shopsData = [\n    { id: 1, name: \"RapidBurger\" },\n    { id: 2, name: \"TurboTaco\" },\n    { id: 3, name: \"ExpressPizza\" },\n  ];","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectCartGoodsByShopId } from \"../../redux/selectors\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField, Box } from \"@mui/material\";\nimport { addOrder } from \"../../redux/orders/orders.operations\";\nimport { resetCart } from \"../../redux/cart/cart.slice\";\nimport { toast } from \"react-toastify\";\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required(\"Name is required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n  phone: Yup.string().required(\"Phone number is required\"),\n  address: Yup.string().required(\"Address is required\"),\n});\n\nexport const OrderForm = () => {\n  const cartGoodsByShopId = useSelector(selectCartGoodsByShopId);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values) => {\n    const payload = {\n      order: [...cartGoodsByShopId],\n      name: values.name,\n      email: values.email,\n      phone: values.phone,\n      address: values.address,\n    };\n\n    dispatch(addOrder(payload));\n\n    dispatch(resetCart());\n    toast.success(\"Order added successfully\");\n  };\n\n  return (\n    <Box sx={{ maxWidth: \"350px\", mt: \"1rem\" }}>\n      <Formik\n        initialValues={{\n          name: \"\",\n          email: \"\",\n          phone: \"\",\n          address: \"\",\n        }}\n        validationSchema={validationSchema}\n        onSubmit={(values) => handleSubmit(values)}\n      >\n        <Form autoComplete=\"off\" id=\"formOrder\">\n          <Field\n            name=\"name\"\n            type=\"text\"\n            as={TextField}\n            label=\"Name\"\n            variant=\"outlined\"\n            fullWidth\n            style={{ marginBottom: \"1rem\" }}\n          />\n          <ErrorMessage\n            name=\"name\"\n            component={Box}\n            sx={{ color: \"red\", position: \"relative\", top: \"-16px\" }}\n          />\n\n          <Field\n            name=\"email\"\n            type=\"email\"\n            as={TextField}\n            label=\"Email\"\n            variant=\"outlined\"\n            fullWidth\n            style={{ marginBottom: \"1rem\" }}\n          />\n          <ErrorMessage\n            name=\"email\"\n            component={Box}\n            sx={{ color: \"red\", position: \"relative\", top: \"-16px\" }}\n          />\n\n          <Field\n            name=\"phone\"\n            type=\"number\"\n            as={TextField}\n            label=\"Phone\"\n            variant=\"outlined\"\n            fullWidth\n            style={{ marginBottom: \"1rem\" }}\n          />\n          <ErrorMessage\n            name=\"phone\"\n            component={Box}\n            sx={{ color: \"red\", position: \"relative\", top: \"-16px\" }}\n          />\n\n          <Field\n            name=\"address\"\n            type=\"text\"\n            as={TextField}\n            label=\"Address\"\n            variant=\"outlined\"\n            fullWidth\n            style={{ marginBottom: \"1rem\" }}\n          />\n          <ErrorMessage\n            name=\"address\"\n            component={Box}\n            sx={{ color: \"red\", position: \"relative\", top: \"-16px\" }}\n          />\n        </Form>\n      </Formik>\n    </Box>\n  );\n};\n","import { useDispatch } from \"react-redux\";\nimport {\n  deleteCartGood,\n  incrementQuantity,\n  decrementQuantity,\n  setQuantity,\n} from \"../../redux/cart/cart.slice\";\nimport {\n  Typography,\n  Card,\n  CardMedia,\n  CardContent,\n  Grid,\n  IconButton,\n  TextField,\n} from \"@mui/material\";\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\nimport RemoveCircleIcon from \"@mui/icons-material/RemoveCircle\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\n\nexport const CartItem = ({ item }) => {\n  const dispatch = useDispatch();\n\n  const deleteItem = (id) => {\n    dispatch(deleteCartGood({ id }));\n  };\n\n  const handleIncrement = (id) => {\n    dispatch(incrementQuantity({ id }));\n  };\n\n  const handleDecrement = (id) => {\n    dispatch(decrementQuantity({ id }));\n  };\n\n  const handleSetQuantity = (id, quantity) => {\n    dispatch(setQuantity({ id, quantity }));\n  };\n\n  return (\n    <Card>\n      <CardContent style={{ position: \"relative\" }}>\n        <IconButton\n          onClick={() => deleteItem(item.id)}\n          size=\"small\"\n          style={{ position: \"absolute\", top: 0, right: 0 }}\n        >\n          <CancelIcon sx={{ color: \"red\" }} />\n        </IconButton>\n        <Grid container spacing={2}>\n          <Grid item>\n            <CardMedia\n              component=\"img\"\n              src={item.image}\n              alt={item.title}\n              style={{ maxWidth: \"200px\" }}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm container direction=\"column\">\n            <Typography variant=\"subtitle1\">{item.title}</Typography>\n            <Typography variant=\"subtitle2\">$ {item.price}</Typography>\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              value={item.quantity}\n              onChange={(e) => handleSetQuantity(item.id, e.target.value)}\n              InputProps={{\n                inputProps: {\n                  style: { textAlign: \"center\" },\n                },\n                startAdornment: (\n                  <IconButton\n                    onClick={() => handleDecrement(item.id)}\n                    size=\"small\"\n                  >\n                    <RemoveCircleIcon />\n                  </IconButton>\n                ),\n                endAdornment: (\n                  <IconButton\n                    onClick={() => handleIncrement(item.id)}\n                    size=\"small\"\n                  >\n                    <AddCircleIcon />\n                  </IconButton>\n                ),\n              }}\n            />\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n","import { CartItem } from \"../CartItem/CartItem\";\nimport { List, ListItem } from \"@mui/material\";\n\nexport const CartList = ({ items }) => {\n  return (\n    <List>\n      {items.map((item) => (\n        <ListItem key={item.id}>\n          <CartItem item={item} />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import { useSelector } from \"react-redux\";\nimport Typography from \"@mui/material/Typography\";\nimport { selectCartGoodsByShopId } from \"../../redux/selectors\";\n\nexport const TotalPrice = () => {\n  const CartGoodsByShopId = useSelector(selectCartGoodsByShopId);\n\n  const totalPrice = CartGoodsByShopId.reduce((total, item) => {\n    return total + Number(item.price) * Number(item.quantity);\n  }, 0);\n\n  return (\n    <div>\n      <Typography variant=\"h6\" component=\"h2\">\n        Total: ${totalPrice.toFixed(2)}\n      </Typography>\n    </div>\n  );\n};\n","import Button from \"@mui/material/Button\";\n\nexport const OrderButton = () => {\n  return (\n    <Button type=\"submit\" form=\"formOrder\" variant=\"contained\" color=\"primary\">\n      Create Order\n    </Button>\n  );\n};\n","import { OrderForm } from \"../OrderForm/OrderForm\";\nimport { CartList } from \"../CartList/CartList\";\nimport { TotalPrice } from \"../TotalPrice/TotalPrice\";\nimport { OrderButton } from \"../OrderButton/OrderButton\";\nimport { Box, Typography } from \"@mui/material\";\nimport {\n  selectCartGoodsByShopId,\n  selectCurrentShopID,\n} from \"../../redux/selectors\";\nimport { useSelector } from \"react-redux\";\nimport { shopsData } from \"../../constants/shopsData\";\n\nexport const Cart = () => {\n  const selectedCartGoodsByShopId = useSelector(selectCartGoodsByShopId);\n  const CurrentShopID = useSelector(selectCurrentShopID);\n  const currentShop = shopsData.find((shop) => shop.id === CurrentShopID);\n\n  return (\n    <>\n      {selectedCartGoodsByShopId.length ? (\n        <>\n          <Box sx={{ mb: 4 }}>\n            Your current store is{\" \"}\n            <strong>{currentShop ? currentShop.name : \"Unknown\"}</strong>. If\n            you need another, select it on the shop page.\n          </Box>\n          <Box display=\"flex\">\n            <OrderForm />\n            <CartList items={selectedCartGoodsByShopId} />\n          </Box>\n          <Box display=\"flex\" justifyContent=\"flex-end\" gap=\"1rem\">\n            <TotalPrice />\n            <OrderButton />\n          </Box>\n        </>\n      ) : (\n        <Typography variant=\"body1\">\n          No items in your cart, please go to SHOP and add goods to cart\n        </Typography>\n      )}\n    </>\n  );\n};\n","import { Cart } from \"../../components/Cart/Cart\";\n\nconst CartPage = () => {\n  return <Cart />;\n};\nexport default CartPage;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectGoods = (state) => state.goods.goods;\nexport const selectOrders = (state) => state.orders.orders;\nexport const selectCartGoods = (state) => state.cart.cartGoods;\nexport const selectCurrentShopID = (state) => state.goods.currentShopID;\n\nexport const selectCartGoodsByShopId = createSelector(\n  selectCartGoods,\n  selectCurrentShopID,\n  (cartGoods, currentShopID) => {\n    const filtered = cartGoods.filter(\n      (item) => item.shopId === currentShopID.toString()\n    );\n\n    return filtered;\n  }\n);\n"],"names":["shopsData","id","name","validationSchema","Yup","required","email","phone","address","OrderForm","cartGoodsByShopId","useSelector","selectCartGoodsByShopId","dispatch","useDispatch","_jsx","Box","sx","maxWidth","mt","children","Formik","initialValues","onSubmit","values","payload","order","_toConsumableArray","addOrder","resetCart","toast","handleSubmit","_jsxs","Form","autoComplete","Field","type","as","TextField","label","variant","fullWidth","style","marginBottom","ErrorMessage","component","color","position","top","CartItem","_ref","item","Card","CardContent","IconButton","onClick","deleteCartGood","size","right","CancelIcon","Grid","container","spacing","CardMedia","src","image","alt","title","xs","sm","direction","Typography","price","value","quantity","onChange","e","target","setQuantity","InputProps","inputProps","textAlign","startAdornment","decrementQuantity","RemoveCircleIcon","endAdornment","incrementQuantity","AddCircleIcon","CartList","items","List","map","ListItem","TotalPrice","totalPrice","reduce","total","Number","toFixed","OrderButton","Button","form","Cart","selectedCartGoodsByShopId","CurrentShopID","selectCurrentShopID","currentShop","shop","_Fragment","length","mb","display","justifyContent","gap","selectGoods","state","goods","selectOrders","orders","currentShopID","createSelector","cart","cartGoods","filter","shopId","toString"],"sourceRoot":""}